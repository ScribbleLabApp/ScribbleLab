{"kind":"article","schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/scribblelab\/auth"]}],"sections":[],"metadata":{"modules":[{"name":"ScribbleLab"}],"title":"Auth","roleHeading":"Article","role":"article"},"hierarchy":{"paths":[["doc:\/\/com.nhstudio.ScribbleLab\/documentation\/ScribbleLab"]]},"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","text":"Overview","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"The ScribbleLab Auth Service is a secure, reliable and easy-to-use authentication service that allows users to gain access to the applicationâ€™s resources through a simple and straightforward process. The ScribbleLab Auth Service is built on top of Firebase, a powerful and scalable database service, ensuring that user authentication is done in a secure and robust manner."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"We offer our users three ways to authenticate:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Google Sign In "},{"inlineContent":[{"type":"codeVoice","code":"(GID)"}],"type":"strong"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"SignInWithApple "},{"type":"strong","inlineContent":[{"type":"codeVoice","code":"(SIWA)"}]}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"ScribbleLabApp Account "},{"type":"strong","inlineContent":[{"code":"(SLA)","type":"codeVoice"}]}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"text":"All three ways are secure due to our secured database.","type":"text"}]},{"level":3,"text":"How is Firebase connected to our App?","anchor":"How-is-Firebase-connected-to-our-App","type":"heading"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"In order to use Firebase you need to import Firebase via SPM and import it in your AppFile as following:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["import SwiftUI","import FirebaseCore"]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Then you need to add Firebase to your AppDelegate:","type":"text"}]},{"syntax":"swift","code":["class AppDelegate: NSObject, UIApplicationDelegate {","    func application(_ application: UIApplication,","                didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey : Any]? = nil) -> Bool {","        FirebaseApp.configure()","","        return true","    }","}"],"type":"codeListing"},{"name":"For the use for GID","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"text":" ","type":"text"},{"type":"text","text":"In order to use GID (= GoogleSignIn) you need to add GoogleSignIn to your Project via SPM. Then import it in your AppFile."}]},{"type":"codeListing","syntax":"swift","code":["import SwiftUI","import FirebaseCore","import GoogleSignIn"]},{"inlineContent":[{"type":"text","text":"Then add the following code to your AppDelegate in order to let GID run properly:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["\/\/ The method should call the handleURL method of GIDSignIn instance, which will properly handle the URL that SL recieves at the end of the auth process.","@available(iOS 9.0, *)","func application(_ application: UIApplication, open url: URL, options: [UIApplication.OpenURLOptionsKey: Any] = [:]) -> Bool {","   return GIDSignIn.sharedInstance.handle(url)","}"]}],"type":"aside","style":"note"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Firebase is now succesfully conected from your App site ðŸŽ‰"}]}]}]},{"anchor":"How-does-our-Authentication-work","text":"How does our Authentication work?","level":3,"type":"heading"},{"inlineContent":[{"text":"While the App is launching it checks wether you have a valide UserSession (email, password, uuid). In order to do that we call our ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nhstudio.ScribbleLab\/documentation\/ScribbleLab\/ContentViewModel"},{"text":" that asks FirebaseAuth after a valide user session:","type":"text"}],"type":"paragraph"},{"code":["private let service = SLAuthService.shared","private var canellables = Set<AnyCancellable>()","","@Published var userSession: FirebaseAuth.User?","@Published var currentUser: User?","","init() {","    setupSubscribers()","}","","func setupSubscribers() {","    service.$userSession.sink { [weak self] userSession in","        self?.userSession = userSession","    }","    .store(in: &canellables)","    ","    service.$currentUser.sink { [weak self] currentUser in","        self?.currentUser = currentUser","    }","    .store(in: &canellables)","}"],"type":"codeListing","syntax":"swift"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""}]},{"code":["import SwiftUI","","struct ContentView: View {","   @StateObject var viewModel = ContentViewModel()","","   var body: some View {","       Group {","           if $viewModel.userSession == nil {","               SignUpView()","           } else if let currentUser = viewModel.currentUser {","             SLSideBarView()","          }","      }","   }","}"],"type":"codeListing","syntax":"swift"}],"name":"ContentView.swift","style":"note","type":"aside"},{"type":"paragraph","inlineContent":[{"text":"While this is all happening our ","type":"text"},{"identifier":"doc:\/\/com.nhstudio.ScribbleLab\/documentation\/ScribbleLab\/ContentViewModel","isActive":true,"type":"reference"},{"text":" also calls the ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.nhstudio.ScribbleLab\/documentation\/ScribbleLab\/SLAuthService","isActive":true},{"type":"text","text":" that tries to fetch the user:"}]},{"type":"codeListing","syntax":"swift","code":["@MainActor","func loadUserData() async throws {","    self.userSession = Auth.auth().currentUser","    guard let currentUid = userSession?.uid else { return }","    self.currentUser = try await UserService.fetchUser(withUid: currentUid)","}"]},{"level":3,"text":"Section header","anchor":"Section-header","type":"heading"}]}],"abstract":[{"type":"text","text":"Scribble Labâ€™s Auth Services"}],"identifier":{"url":"doc:\/\/com.nhstudio.ScribbleLab\/documentation\/ScribbleLab\/Auth","interfaceLanguage":"swift"},"seeAlsoSections":[{"generated":true,"title":"Authentication","identifiers":["doc:\/\/com.nhstudio.ScribbleLab\/documentation\/ScribbleLab\/AuthFlow","doc:\/\/com.nhstudio.ScribbleLab\/documentation\/ScribbleLab\/SLAuthService"]}],"references":{"doc://com.nhstudio.ScribbleLab/documentation/ScribbleLab/SLAuthService":{"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"SLAuthService","kind":"identifier"}],"url":"\/documentation\/scribblelab\/slauthservice","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SLAuthService"}],"title":"SLAuthService","identifier":"doc:\/\/com.nhstudio.ScribbleLab\/documentation\/ScribbleLab\/SLAuthService","abstract":[{"text":"ScribbleLabâ€™s service responsible for managing user authentication and data operations.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://com.nhstudio.ScribbleLab/documentation/ScribbleLab/AuthFlow":{"identifier":"doc:\/\/com.nhstudio.ScribbleLab\/documentation\/ScribbleLab\/AuthFlow","role":"article","type":"topic","title":"AuthFlow","kind":"article","url":"\/documentation\/scribblelab\/authflow","abstract":[{"text":"ScribbleLabâ€™s Auth flow","type":"text"}]},"doc://com.nhstudio.ScribbleLab/documentation/ScribbleLab":{"abstract":[{"type":"text","text":"ScribbleLabâ€™s developer documentation"}],"role":"collection","type":"topic","title":"ScribbleLab","identifier":"doc:\/\/com.nhstudio.ScribbleLab\/documentation\/ScribbleLab","url":"\/documentation\/scribblelab","kind":"symbol"},"doc://com.nhstudio.ScribbleLab/documentation/ScribbleLab/ContentViewModel":{"role":"symbol","url":"\/documentation\/scribblelab\/contentviewmodel","type":"topic","title":"ContentViewModel","identifier":"doc:\/\/com.nhstudio.ScribbleLab\/documentation\/ScribbleLab\/ContentViewModel","navigatorTitle":[{"text":"ContentViewModel","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ContentViewModel"}],"kind":"symbol","abstract":[{"type":"text","text":"A Model that manages data related to user sessions and current user information."}]}}}