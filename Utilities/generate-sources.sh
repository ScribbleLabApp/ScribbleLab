#!/bin/sh

#  Copyright (c) 2015 - 2024 Apple Inc. - All rights reserved.
#  Copyright (c) 2024 ScribbleLabApp LLC.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions are met:
#
#  1. Redistributions of source code must retain the above copyright notice, this
#     list of conditions and the following disclaimer.
#
#  2. Redistributions in binary form must reproduce the above copyright notice,
#     this list of conditions and the following disclaimer in the documentation
#     and/or other materials provided with the distribution.
#
#  3. Neither the name of the copyright holder nor the names of its
#     contributors may be used to endorse or promote products derived from
#     this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
#  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
#  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
#  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
#  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
#  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
#  OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

set -eu

# Define the root of the project directory
srcroot="$(dirname "$0")/.."
cd "$srcroot"

# Define the path to the GYB executable
gyb="./Utilities/gyb"

# Disable line directives in GYB output. We commit generated sources
# into the package repository, so we do not want absolute file names
# in them.
lineDirective=''

# Uncomment the following line to enable #sourceLocation directives.
# This is useful for local development.
#lineDirective='#sourceLocation(file: "%(file)s", line: %(line)d)'

# Create a temporary directory and remove it on exit
tmpdir="$(mktemp -d  "${TMPDIR:-/tmp}/$(basename "$0").XXXXXXXX")"
trap "rm -rf \"$tmpdir\"" EXIT

# Run GYB on each GYB file in the source tree and put results in
# subdirectories named 'autogenerated'.
find ./Sources ./Tests -name "*.swift.gyb" | while read input; do
    basename="$(basename "$input")"
    targetdir="$(dirname "$input")/autogenerated"
    output="$targetdir/"${basename%.gyb}
    tmpfile="$tmpdir/${basename%.gyb}"

    # Make sure the output directory exists
    mkdir -p "$targetdir"

    # Run GYB, making sure to only update files when they change
    "$gyb" --line-directive "$lineDirective" -o "$tmpfile" "$input"
    if [ -e "$output" ] && cmp -s "$tmpfile" "$output"; then
        : Ignore unchanged file
    else
        echo "Updated $output"
        cp "$tmpfile" "$output"
    fi
    echo "$output" >> "$tmpdir/generated-files.txt"
done

# Remove autogenerated files without a corresponding GYB
find . -path '*/autogenerated/*.swift' >> "$tmpdir/generated-files.txt"
sort "$tmpdir/generated-files.txt" | uniq -u | while read obsolete; do
    echo "Removing $obsolete"
    rm "$obsolete"
done
